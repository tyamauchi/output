マイクロサービスアーキテクチャ（MSA）は、分散したリソース制約のあるFogコンピューティング環境内で展開する大規模なIoTアプリケーションを開発するために急速に普及しています。クラウドネイティブなアプリケーションアーキテクチャとして、マイクロサービスの真のパワーは、疎結合、独立したデプロイ可能、スケーラブルな性質に由来し、フェデレートされたフォグおよびクラウドクラスタ間での分散配置と動的な構成を可能にします。したがって、アプリケーションのパフォーマンスを向上させるために、このようなマイクロサービスの特性を利用した新しい配置アルゴリズムを開発する必要がある。しかし、既存のフォグコンピューティングフレームワークは、マルチフォグ・マルチクラウド環境にわたるMSAアプリケーションの配置とデプロイメント、複数の分散クラスタにわたる動的なマイクロサービス構成、連携環境内で動作するフレームワークのスケーラビリティ、異種マイクロサービスアプリケーションのデプロイメントのサポートなど、複数の分野で欠点があるため、このような配置ポリシーを統合するためのサポートが不足しています。この目的のために、Docker、Kubernetes、Istioなどのクラウドネイティブ技術と互換性のあるFogコンピューティングフレームワークであるMicroFogを設計し、実装します。MicroFogは、配置アルゴリズムを実行し、連携したFog環境全体にアプリケーションを展開する、拡張可能で設定可能な制御エンジンを提供します。さらに、MicroFog はコンテナのオーケストレーションと動的なマイクロサービスのコンポジションに対する十分な抽象化を提供するため、ユーザは新しい配置ポリシーを簡単に組み込んで、そのパフォーマンスを評価することができます。MicroFog の設計およびデプロイメントアーキテクチャのスケーラビリティと柔軟性、分散フォグクラウド環境全体へのマイクロサービスのデプロイメントとコンポジションを保証する能力などの MicroFog フレームワークの能力は、複数のユースケースを使用して検証されています。この目的のため、複数のマイクロサービス配置ポリシーを統合し、連携環境全体でマイクロサービスの水平スケーリング配置、サービス検出、および負荷分散をサポートする MicroFog の能力を実証し、アプリケーションのサービス応答時間を最大 54% 短縮します。
